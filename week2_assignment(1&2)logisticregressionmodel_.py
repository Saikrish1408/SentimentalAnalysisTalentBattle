# -*- coding: utf-8 -*-
"""Week2 Assignment(1&2)LogisticRegressionModel .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JopMaCys80ob4DeD_7z8TAD9rxQLOOGW
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from google.colab import drive

drive.mount('/content/drive')

dataset = pd.read_csv('/content/drive/MyDrive/Datasets for Machine Learning/titanic_train.csv')

dataset

len(dataset)

dataset.info()

dataset.dtypes

dataset.describe()

"""# Seaborn for Visualization"""

# countplot of survived vs not-survived

sns.countplot(x='Survived', data=dataset, palette='deep', hue='Sex')

# Check for Null

# dataset.isna()

dataset.isna().sum()

# Visualize the Null Values

sns.heatmap(dataset.isna())

# finding out the how many null values in Age Column

(dataset['Age'].isna().sum() / len(dataset['Age'])) * 100

# finding out the how many null values in Cabin Column

(dataset['Cabin'].isna().sum() / len(dataset['Cabin'])) * 100

# More Description of the Age Column

sns.displot(x='Age', data=dataset)

"""# Data Cleaning

"""

# Replacing the null values in Age Column with its mean

meanOfAge = dataset['Age'].mean()

dataset['Age'].fillna(meanOfAge, inplace=True)

# Returns how manu null values are in Age Column

dataset['Age'].isna().sum()

# Drop Cabin Columns due to its high percentage of null values

dataset.drop('Cabin', axis=1, inplace=True)

dataset.columns

dataset.info()

"""**let's drop the object columns becoz it doesn't help us with any of the Machine Learning Predictions**"""

# Converting Sex column to numerical values

gender = pd.get_dummies(dataset.Sex, drop_first=True)

# Tells 1 -> Male, 0 -> Female

# Replacing the new Sex column into the dataset inplace of Actual Sex Column

dataset['Gender'] = gender

dataset.columns

# Dropping the Sex Column

dataset.drop(['Name', 'Ticket', 'Embarked'], inplace = True, axis = 1)

dataset.columns

"""# Implementation of the Logistic Regression"""

# Separation of Dependent and Independent Varibale

x = dataset[[
    'PassengerId','Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Gender'
]]

y = dataset['Survived']

# Train and Split Method

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)

# Logistic Regression

from sklearn.linear_model import LogisticRegression

algorithmLR = LogisticRegression()

algorithmLR.fit(X_train, y_train)

# Prediction

predict = algorithmLR.predict(X_test)

# Testing (Confustion Matrix)

from sklearn.metrics import confusion_matrix

pd.DataFrame(confusion_matrix(y_test, predict), columns = ['Predicted No', 'Predicted Yes'], index = ['Actual No', 'Actual Yes'])

"""# Classification Report

"""

from sklearn.metrics import classification_report

print(classification_report(y_test, predict))